---
- set_fact:
    jswarm_unique: ""
  when: jswarm_enable_uid

- set_fact:
    jswarm_unique: "-disableClientsUniqueId"
  when: not jswarm_enable_uid

- name: Get swarm client
  get_url: "url={{ jswarm_url }}/{{ jswarm_ver }}/swarm-client-{{ jswarm_ver }}-jar-with-dependencies.jar dest={{ jswarm_jar_loc }} mode=777"

- name: Clean /etc/rc.local of any previous jenkins slave setup
  lineinfile: "dest=/tmp/test regexp='^su --login jenkins.*|nohup /usr/bin/java.*' state=absent"

- name: Add swarm to /etc/rc.local for startup as jenkins user
  lineinfile: "dest=/tmp/test line='{{ jenkins_user_command_pre }} \"{{ jswarm_command }} {{ jswarm_unique }} {{ jswarm_command_sfx }}\"' state=present"
  when: jenkins_user

- name: Add swarm to /etc/rc.local for startup as root user
  lineinfile: "dest=/tmp/test line='{{ jswarm_command }} {{ jswarm_unique }} {{ jswarm_command_sfx }}' state=present"
  when: not jenkins_user

- name: Check if slave is running and register
  shell: pgrep -f swarm
  register: swarm
  ignore_errors: true

- name: Kill jenkins swarm process if kill_jslave defined and process is running
  shell: kill -9 {{ swarm.stdout }}
  when: (kill_jslave is defined and swarm.stdout != "")

- name: Remove Jenkins swarm log file if kill_jslave defined and process is running
  shell: rm -f /tmp/jslave.log
  when: (kill_jslave is defined and swarm.stdout != "")

- name: Check if slave is running and register
  shell: pgrep -f swarm
  register: swarm
  ignore_errors: true

- name: Start swarm to connect to master as jenkins user
  shell: "{{ jenkins_user_command_pre }} '{{ jswarm_command }} {{ jswarm_unique }} {{ jswarm_command_sfx }}'"
  when: (jenkins_user and swarm.stdout == "")

- name: Start swarm to connect to master as root user
  shell: '{{ jswarm_command }} {{ jswarm_unique }} {{ jswarm_command_sfx }}'
  when: (not jenkins_user and swarm.stdout == "")
